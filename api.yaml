openapi: 3.0.0
info:
  title: Sample Product API
  version: 1.0.0
paths:
  /products:
    get:
      summary: Get a list of products
      tags: [Product]
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductGetResponse"

  /products/{productId}:
    get:
      summary: Get product details by ID
      tags: [Product]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    put:
      summary: Update product details by ID
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductBody"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /products/add:
    post:
      summary: Create a new product
      tags: [Product]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductBody"
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /pets:
    patch:
      tags: [Pet]
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Cat"
                - $ref: "#/components/schemas/Dog"
      responses:
        "200":
          description: Updated

components:
  schemas:
    ProductGetResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        total:
          type: integer
        skip:
          type: integer
        limit:
          type: integer
      required:
        - products
        - total
        - skip
        - limit]
    Product:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          x-go-custom-tag: required
        description:
          type: string
        price:
          type: number
        discountPercentage:
          type: number
        rating:
          type: number
        stock:
          type: integer
        brand:
          type: string
        category:
          type: string
          enum:
            - smartphones
            - laptops
        thumbnail:
          type: string
        images:
          type: array
          items:
            type: string
      required:
        - id
        - title
        - price
        - stock
        - brand
        - category

    ProductBody:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        discountPercentage:
          type: number
        stock:
          type: integer
        brand:
          type: string
        category:
          type: string
          enum:
            - smartphones
            - laptops
        thumbnail:
          type: string
        images:
          type: array
          items:
            type: string
      required:
        - title
        - price
        - stock
        - brand
        - category
    Cat:
      type: object
      properties:
        hunts:
          type: boolean
        age:
          type: integer
    Dog:
      type: object
      properties:
        bark:
          type: boolean
        breed:
          $ref: "#/components/schemas/DogBreed"
    DogBreed:
      type: string
      enum: [Dingo, Husky, Retriever, Shepherd]
