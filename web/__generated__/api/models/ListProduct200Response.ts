/* tslint:disable */
/* eslint-disable */
/**
 * Sample Product API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Product } from './Product';
import {
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
} from './Product';

/**
 * 
 * @export
 * @interface ListProduct200Response
 */
export interface ListProduct200Response {
    /**
     * 
     * @type {Array<Product>}
     * @memberof ListProduct200Response
     */
    products: Array<Product>;
    /**
     * 
     * @type {number}
     * @memberof ListProduct200Response
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof ListProduct200Response
     */
    skip: number;
    /**
     * 
     * @type {number}
     * @memberof ListProduct200Response
     */
    limit: number;
}

/**
 * Check if a given object implements the ListProduct200Response interface.
 */
export function instanceOfListProduct200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "products" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "skip" in value;
    isInstance = isInstance && "limit" in value;

    return isInstance;
}

export function ListProduct200ResponseFromJSON(json: any): ListProduct200Response {
    return ListProduct200ResponseFromJSONTyped(json, false);
}

export function ListProduct200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListProduct200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'products': ((json['products'] as Array<any>).map(ProductFromJSON)),
        'total': json['total'],
        'skip': json['skip'],
        'limit': json['limit'],
    };
}

export function ListProduct200ResponseToJSON(value?: ListProduct200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'products': ((value.products as Array<any>).map(ProductToJSON)),
        'total': value.total,
        'skip': value.skip,
        'limit': value.limit,
    };
}

